// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var verifier = artifacts.require('Verifier');
const proof = require('../../zokrates/code/square/proof.json');

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract('TestVerifier', accounts => {

    const account_one = accounts[0];

    beforeEach(async () => {
        this.contract = await verifier.new({from: account_one});
    });

    it('should verify correct proof', async () => {
        let result = await this.contract.verifyTx.call(
            proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs
        );
        assert.equal(result, true, "Proof is not verified");
    });

    it('should not verify incorrect proof', async () => {
        let result = await this.contract.verifyTx.call(
            proof.proof.a, proof.proof.b, proof.proof.c, [1, 2]
        );
        assert.equal(result, false, "Incorrect proof is verified");
    });
})